<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.placeMe</groupId>
  <artifactId>placeMe-web</artifactId>
  <packaging>war</packaging>
  <version>0.0.1-SNAPSHOT</version>
  <name>placeMe-web Maven Webapp</name>
  <url>http://maven.apache.org</url>
	<!-- Profiles configuration -->
	<profiles>
	    <profile>
	        <id>dev-home</id>
	        <!-- Dev profile is active by default -->
	        <activation>
	            <activeByDefault>true</activeByDefault>
	        </activation>
	        <properties>
	            <!--
	               Specifies the build profile id, which is used to find out the correct properties file.
	               This is not actually necessary for this example, but it can be used for other purposes.
	           -->
	            <build.profile.id>dev-home</build.profile.id>
	        </properties>
	        <build>
	            <filters>
	                <!--
	                   Specifies path to the properties file, which contains profile specific
	                   configuration. In this case, the configuration file is searched
	                   from profiles/dev/ directory.
	               -->
	                <filter>profiles/${build.profile.id}/env.properties</filter>
	            </filters>
	            <resources>
	                <!--
	                   Placeholders found from files located in the configured resource directories are replaced
	                   with values found from the profile specific configuration files.
	               -->
	                <resource>
	                    <filtering>true</filtering>
	                    <directory>src/main/resources</directory>
	                    <!--
	                       You can also include only specific files found from the configured directory or
	                       exclude files. This can be done by uncommenting following sections and adding
	                       the configuration under includes and excludes tags.
	                   -->
	                    <!--
	                   <includes>
	                       <include></include>
	                   </includes>
	                   <excludes>
	                       <exclude></exclude>
	                   </excludes>
	                   -->
	                </resource>
	            </resources>
	        </build>
	    </profile>
	    <profile>
	        <id>openshift</id>
	        <properties>
	            <!--
	               Specifies the build profile id, which is used to find out the correct properties file.
	               This is not actually necessary for this example, but it can be used for other purposes.
	           -->
	            <build.profile.id>openshift</build.profile.id>
	        </properties>
	        <build>
	            <filters>
	                <!--
	                   Specifies path to the properties file, which contains profile specific
	                   configuration. In this case, the configuration file is searched
	                   from profiles/test/ directory.
	               -->
	                <filter>profiles/${build.profile.id}/env.properties</filter>
	            </filters>
	            <resources>
	                <!--
	                   Placeholders found from files located in the configured resource directories are replaced
	                   with values found from the profile specific configuration files.
	               -->
	                <resource>
	                    <filtering>true</filtering>
	                    <directory>src/main/resources</directory>
	                    <!--
	                       You can also include only specific files found from the configured directory or
	                       exclude files. This can be done by uncommenting following sections and adding
	                       the configuration under includes and excludes tags.
	                   -->
	                    <!--
	                   <includes>
	                       <include></include>
	                   </includes>
	                   <excludes>
	                       <exclude></exclude>
	                   </excludes>
	                   -->
	                </resource>
	            </resources>
	        </build>
	    </profile>
	    <profile>
	        <id>dev-office</id>
	        <properties>
	            <!--
	               Specifies the build profile id, which is used to find out the correct properties file.
	               This is not actually necessary for this example, but it can be used for other purposes.
	           -->
	            <build.profile.id>dev-office</build.profile.id>
	        </properties>
	        <build>
	            <filters>
	                <!--
	                   Specifies path to the properties file, which contains profile
	                   specific configuration. In this case, the configuration file is searched
	                   from profiles/prod/ directory.
	               -->
	                <filter>profiles/${build.profile.id}/env.properties</filter>
	            </filters>
	            <resources>
	                <!--
	                   Placeholders found from files located in the configured resource directories are replaced
	                   with values found from the profile specific configuration files.
	               -->
	                <resource>
	                    <filtering>true</filtering>
	                    <directory>src/main/resources</directory>
	                    <!--
	                       You can also include only specific files found from the configured directory or
	                       exclude files. This can be done by uncommenting following sections and adding
	                       the configuration under includes and excludes tags.
	                   -->
	                    <!--
	                   <includes>
	                       <include></include>
	                   </includes>
	                   <excludes>
	                       <exclude></exclude>
	                   </excludes>
	                   -->
	                </resource>
	            </resources>
	        </build>
	    </profile>
	</profiles>  
  <dependencies>
	<dependency>
		<groupId>net.sf.json-lib</groupId>
		<artifactId>json-lib</artifactId>
		<version>2.4</version>
		<classifier>jdk15</classifier>		
	</dependency>	
	<dependency>
		<groupId>bouncycastle</groupId>
		<artifactId>bcprov-jdk16</artifactId>
		<version>140</version>
	</dependency>	
	<dependency>
		<groupId>com.sun.faces</groupId>
		<artifactId>jsf-api</artifactId>
		<version>2.1.18</version>
	</dependency>
	<dependency>
		<groupId>com.sun.faces</groupId>
		<artifactId>jsf-impl</artifactId>
		<version>2.1.18</version>
	</dependency>
 	<dependency>
    	<groupId>com.sun.el</groupId>
    	<artifactId>el-ri</artifactId>
    	<version>1.0</version>
  	</dependency>
	<dependency>
		<groupId>org.glassfish.web</groupId>
		<artifactId>javax.servlet.jsp.jstl</artifactId>
		<version>1.2.1</version>
	</dependency>
	<dependency>
		<groupId>com.sun.xml.ws</groupId>
		<artifactId>jaxws-rt</artifactId>
		<version>2.2.7</version>
	</dependency>
	<dependency>
		<groupId>javax.servlet</groupId>
		<artifactId>servlet-api</artifactId>
		<version>2.5</version>
		<scope>provided</scope>
	</dependency>
	<dependency>
		<groupId>javax.servlet.jsp</groupId>
		<artifactId>jsp-api</artifactId>
		<version>2.1</version>
		<scope>provided</scope>
	</dependency>
	<dependency>
		<groupId>mysql</groupId>
		<artifactId>mysql-connector-java</artifactId>
		<version>5.1.22</version>
	</dependency>
	<dependency>
		<groupId>commons-io</groupId>
		<artifactId>commons-io</artifactId>
		<version>2.4</version>
	</dependency>
	<dependency>
		<groupId>org.directwebremoting</groupId>
		<artifactId>dwr</artifactId>
		<version>3.0.M1</version>
	</dependency>	
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-jdbc</artifactId>
		<version>3.2.1.RELEASE</version>
	</dependency>
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-context</artifactId>
		<version>3.2.1.RELEASE</version>
	</dependency>	
	<dependency>
		<groupId>org.apache.myfaces.tomahawk</groupId>
		<artifactId>tomahawk</artifactId>
		<version>1.1.8</version>
	</dependency>				
  </dependencies>
  <build>
    <finalName>placeMe</finalName>
    <plugins>
    	<plugin>
        	<groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-compiler-plugin</artifactId>
            <configuration>
            	<source>1.6</source>
                <target>1.6</target>
                <encoding>UTF-8</encoding>
            </configuration>
        </plugin>    
    </plugins>
  </build>
</project>
